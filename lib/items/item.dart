/// MultaccItem interface
abstract class MultaccItem {
  /// Multacc item key for database
  String key;

  MultaccItem(): key = null;

  /// This should take the map generated by jsonDecode and use it to populate
  /// instance variables (username, etc.)
  MultaccItem.fromJson(Map<String, dynamic> json);

  /// This should return a map that can be passed to the constructor to
  /// rehydrate this item in the future.
  Map<String, dynamic> toJson();

  /// Launch the relevant app to message someone
  void launchApp() {}

  /// Boolean indicating whether calling launchApp() will do something useful
  bool isLaunchable() => false;

  /// Get item type (from MultaccItemType enum; index will be stored in database)
  MultaccItemType getType();

  /// Get human-readable item type for display
  String getHumanReadableType();

  /// Get human-readable item type (Snapchat, etc.) to display
  String getHumanReadableValue();

  // @todo Frontend team should add something like getIcon to MultaccItem
}

enum MultaccItemType {
  Twitter,
  Snapchat, // @todo Implement snapchat
  Instagram, // @todo Implement instagram
  Facebook, // @todo Implement facebook
  Discord, // @todo Implement discord
  Dogecoin // @todo Implement dogecoin
}